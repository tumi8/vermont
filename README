This is VERMONT - VERsatile MONitoring Tool.
IPFIX/PSAMP probe
Released under GPL2, no guarantees, no warranty


REQUIREMENTS

Decent and recent gcc compiler w/ C++ support (there are some gcc-isms)
libpcap
*nix (Linux and recent FreeBSD preferred, other untested)


INSTALLATION

#> make
edit test.ini
#> ./vermont -f test.ini -dddd

Right now, there are only dirty Makefiles in place, so you may want to do a
full make clean before a rebuild.

If you want more debugging output, define DEBUG that Makefile of which
subsystem you want more output from - that is, add -DDEBUG to CFLAGS.
If you want to use it production-wise don't define it - nasty output.

Technically it allows the DPRINTF()s in the source to be in effect.


CONFIGURATION

Packaged comes a commented test.ini file.
As there are 2 subsystems, each one can be configured independently.


SAMPLER

Does packet sampling, reads raw packet data from an interface, put them thru
a filtering mechanism and finally export matching packets to an PSAMP/IPFIX 
collector.


CONCENTRATOR

Reads IPFIX/Netflow data from socket, aggregates data for certain flows, 
exports this data again via IPFIX.


THE HOOK

You can configure VERMONT to inject SAMPLER's captured packets into the
CONCENTRATOR for aggregation and export. Config option is in section main,
value packets.


NOTES ON MONITORING PORTS

Some switches add an additional field VLAN with size 4Bytes.
So you have to adjust the pcap_expression to "vlan and ip".
Futhermore, the Packet::IPHeaderOffset has to adjusted to 18.


NOTES ON THREADS

When threads are to be exited, their real exit is waited for using 
pthread_join().
This may lock for a while because I/O from sockets etc. is done in blocking
mode, so when no packet arrives, the thread will block in read().
You may want to rewrite the Thread class to do a pthread_detach() instread and
grep for further occurences of pthread_join().


APPENDIX

faster Linux MMAP()ed PCAP: http://public.lanl.gov/cpw/

