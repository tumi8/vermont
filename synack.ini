# VERMONT config file
# use "," as separator where multiple values per line
#

[concentrator]
# off if you don't want to run the concentrator subsystem
run=on

# port you want the IpfxReceiver to listen on
# off if IpfixReceiver should be off and only hooking used as input
#listen=4711
listen=off

# export_to is either proto://ip:port or off
# example: udp://127.0.0.1:4811
export_to=udp://127.0.0.1:1500
source_id=4812

# rules read from file
rules=synack_rules.conf

# poll_interval, in ms
# the concentrator needs to be periodically polled
# so data is exported, expired and so on
# a resolution of 500ms against 5s buffertime seems reasonable
poll_interval=500

# Seconds until an flow will be exported after the last flow was merged in
buffertime_min=5
# Seconds until an flow will be exported after it was created
buffertime_max=10

[sampler]
# for pcap_open_live(char *device)
# or off if you don't want to use the sampler alltogether
#interface=off
interface=eth0

# export_to is either proto://ip:port or off
# example: udp://127.0.0.1:4711
#export_to=udp://127.0.0.1:1500
export_to=off
source_id=4711

# pcap filter expression
# you only want to have IP traffic - nothing else is supported
# you may add something like "port 80" - see man tcpdump for expressions
pcap_filter="ip and tcp[tcpflags] & (tcp-syn|tcp-ack) != 0"
#pcap_filter="ip"

# sniff this much bytes from the packet on the wire
# Observer::capturelen (CAPTURE_LENGTH)
capturelen=128

# do not put more than this many packets in one IPFIX packet
# Exporter::maxpackets
ipfixmaxpackets=10

# wait this long until exporting data
# in ms
export_timeout=400

# config template
# separeate IDs with "," and no space
# names or numeric IDs are allowed, but both will be checked
template_id=1025
template=sourceipv4address,destinationipv4address,tcpcontrolbits

# config filters
# the order is relevant
filters=off
#filters=ipf_tcp,ipf_syn

# type	name			params
# ------------------------------------
# 0	reserved (internal)
# 1	Systematic Sampler	type,onTime,offTime
#				type: 1=count-based, 2=time-based
#
# 2	Random Sampler		n,N
#				n out of N packets
#
# 3	IP Header Filter	header,offset,size,comparison,value
#				header: 1=IP, 2=transport
#				comparison: 0=lessthan, 1=lt-equal, 2=equal
#					3=equal-greaterthan, 4=gt, 5=not equal
#					6=against bitmask
#
# Filter TCP (using pcap filter would be more efficient)
ipf_tcp=3,1,9,1,2,6
# Filter SYN
ipf_syn=3,2,13,1,6,2
# Random Sampler
#random1=2,5,10

[main]
# hook from sampler subsystem into the concentrator/accounting
# all or filtered or off
#packets=filtered
packets=all

# file we want to log statistics to
# or off
#log=stat.log
log=off

# the interval the logging thread writes statistics to 
# file given above; if log=off, no statistics are 
# written
# in ms
log_interval=300000
